<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bluegrass.dao.RadioCommentMapper" >
  <resultMap id="BaseResultMap" type="com.bluegrass.pojo.RadioComment" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="radio_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="user_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="comment" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, radio_id, user_id, comment, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from radio_comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from radio_comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bluegrass.pojo.RadioComment" >
    insert into radio_comment (id, radio_id, user_id, 
      comment, create_time)
    values (#{id,jdbcType=INTEGER}, #{radioId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{comment,jdbcType=VARCHAR}, now())
  </insert>
  <insert id="insertSelective" parameterType="com.bluegrass.pojo.RadioComment" >
    insert into radio_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="radioId != null" >
        radio_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="comment != null" >
        comment,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="radioId != null" >
        #{radioId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="comment != null" >
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        now(),
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bluegrass.pojo.RadioComment" >
    update radio_comment
    <set >
      <if test="radioId != null" >
        radio_id = #{radioId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="comment != null" >
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bluegrass.pojo.RadioComment" >
    update radio_comment
    set radio_id = #{radioId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      comment = #{comment,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <delete id="deleteByRadioId" parameterType="int">
    delete from radio_comment
    where
   radio_id = #{radioId}
  </delete>

  <select id="selectByRadioId" parameterType="string" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from
    radio_comment
    where
    radio_id = #{radioId}
    order by create_time desc

  </select>

  <delete id="deleteByUserIdAndId" parameterType="map">
    delete from
    radio_comment
    where
    user_id = #{userId}
    and
    id = #{radioCommentId}

  </delete>

  <select id="selectCommentNum" parameterType="string" resultType="int">
    select count(1)
    from radio_comment
    where
    radio_id = #{radioId}

  </select>


</mapper>






















